


#opencv işleri
#resim okuma
import cv2
resim=cv2.imread("para.jpg")  # resimelri okuyoruz # scanf gibi
# resim=cv2.imread("para.jpg",0)  yapsaydın ,gri renkte görürdük resmi komple 
cv2.imshow("resimcik",resim) #resimleri  gösteriyoruz ,printf gibi
cv2.waitKey(0)  # bir tuşa basana kadar bekliyor ,0 yerine 5 felan yazsan 5 sn sonra kapatır
cv2.destroyAllWindows() # bütün penceleri kapatıyor










import cv2
from matplotlib import pyplot as plt

resim=cv2.imread("para.jpg",)

cv2.namedWindow("resim1",cv2.WINDOW_AUTOSIZE) # bu WİNDOW_AUTOSIZE ile boyut ayarlamayazsın resimlerdeki kendi oto ayarlıyor
cv2.imshow("resim1",resim)# bu resim1 ,resim_penceresi felan anlamları var , resim1  resim2 yazsaydım ayrı penceleri acarlardı

cv2.imshow("resim_penceresi",resim)

plt.imshow(resim)
plt.show()

k=cv2.waitKey(0)
if k==27:
    print("ESC tuşuna basıldı.")
elif k==ord("q"):
    print("q tusuna basıldı,resim kayıt edildi.")
    cv2.imwrite("para_gri.jpg",resim)
cv2.destroyAllWindows()









import cv2
from matplotlib import pyplot as plt

resim=cv2.imread("para.jpg",)

cv2.namedWindow("resim1",cv2.WINDOW_NORMAL) # bu window_normal ile resimlerdeki boyutu elle düzeltebilirsin
cv2.imshow("resim1",resim)# bu resim1 ,resim_penceresi felan anlamları var , resim1  resim2 yazsaydım ayrı penceleri acarlardı

cv2.imshow("resim_penceresi",resim)

plt.imshow(resim)
plt.show()

k=cv2.waitKey(0)
if k==27:
    print("ESC tuşuna basıldı.")
elif k==ord("q"):
    print("q tusuna basıldı,resim kayıt edildi.")
    cv2.imwrite("para_gri.jpg",resim)
cv2.destroyAllWindows()











import cv2
from matplotlib import pyplot as plt

resim=cv2.imread("para.jpg",0)
cv2.imshow("resimcik",resim)
plt.imshow(resim)
plt.show()

k=cv2.waitKey(0)
if k==27:
    print("ESC tuşuna basıldı.")
elif k==ord("q"):
    print("q tusuna basıldı,resim kayıt edildi.")
    cv2.imwrite("para_gri.jpg",resim)
cv2.destroyAllWindows()
















import cv2
camera=cv2.VideoCapture(0)
while True:   # frame ise  video cercevesidir
    durum,frame=camera.read() # durum true or false gelicek
    if not durum:
        print("kameradan görüntü okunamıyor")
        break
    cv2.imshow("kamera",frame)
    if cv2.waitKey(1) & 0xff==ord("q"):
        print("görüntü sonlandırıldı")
        break

camera.release() # kamera kapatma için
cv2.destroyAllWindows() # pencere kapatma için












import cv2
camera=cv2.VideoCapture(0)
while True:   # frame ise  video cercevesidir
    durum,frame=camera.read() # durum true or false gelicek
    frame=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY) # gri yapıyor yayını
    if not durum:
        print("kameradan görüntü okunamıyor")
        break
    cv2.imshow("kamera",frame)
    if cv2.waitKey(1) & 0xff==ord("q"):
        print("görüntü sonlandırıldı")
        break

camera.release() # kamera kapatma için
cv2.destroyAllWindows() # pencere kapatma için














import cv2
camera=cv2.VideoCapture(0)
# burda kameradan aldıgımızda frame in width ve height ını alıyoruz
print(camera.get(3)) #  3 ün anlamı width dır  normalde 640.0
print(camera.get(4)) # 4 ün anlamı height dır  normalde 480.0
camera.set(3,300) # burdada width ini degiştirdik
camera.set(4,240) # height ını degiştirdik

while True:   # frame ise  video cercevesidir
    durum,frame=camera.read() # durum true or false gelicek
    # frame=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY) # gri yapıyor yayını
    if not durum:
        print("kameradan görüntü okunamıyor")
        break
    cv2.imshow("kamera",frame)
    if cv2.waitKey(1) & 0xff==ord("q"):
        print("görüntü sonlandırıldı")
        break

camera.release() # kamera kapatma için
cv2.destroyAllWindows() # pencere kapatma için









boyut ayarlama size width, height

import cv2

cam=cv2.VideoCapture("video1.mp4")
cv2.namedWindow("resim1",cv2.WINDOW_NORMAL)

while cam.isOpened():
    durum,frame=cam.read()
    if not durum:
        print("kameradan görüntü alamadık")
        break
    cv2.imshow("resim1",frame)
    cv2.waitKey(5)
    if cv2.waitKey(5) & 0xFF == ord("q"):
        print("video kapatıldı")
        break

cam.release()
cv2.destroyAllWindows()





















# video kaydetme  ,yalnız ses yok kaydetmiyor sesi

import cv2
cam=cv2.VideoCapture(0)
#print(cam.get(5))  # bu 5 in anlamıda kameradaki fps hızı bizdeki 30.0 fps deymiş
fourrc= cv2.VideoWriter_fourcc   (*'XVID') # bu özel bir tanım mjpg
out=cv2.VideoWriter("video2.avi",fourrc,30.0,(640,480)) # eger uygun degilde 640 ,480 gibi  hata verir video acılmaz
  #     640 400 verseydin video acılmazdı  , 1920 1080 gibi cart curt lazım

while cam.isOpened():
    condition, frame =cam.read()
    if not condition:
        print("goruntu alınamıyor")
        break
    out.write(frame)
    cv2.imshow("goruntu",frame)
    if cv2.waitKey(1) &0xff ==ord("q"):
        print("goruntu bitti")
        break

cam.release() # kamera
out.release() # boş sablon ,buraya kayıt ediyoruz ya onuda kapatmak gerek
cv2.destroyAllWindows()












import cv2
import numpy

## renk düzlemleri mavi yesil kırmızıdır
## renk türü ise rgb olması için  3 yaptık 3 renk uzayına sahip  3 yazmaz isen siyah beyaz gibi 1 renk düzlemini baz alır
## numpy.zeros( height,width,renk türü),sayı tipi)  sayı tipine bir şey koymaz ise float kabul eder


## düz sıyah kare pencere yaptık ,ones yazsaydık beyaz arka plan olurdu
img=numpy.zeros((512,512,3),numpy.uint8 )
## print(img) # ful matrix verdi 0 lardan oluşan 3x3 lük


## line yaptık kare pencerede
## 512 piksel deyince başnagıc 0 bitiş 511 dir , ve 512 olur
## cv2.line( ebru  (başlangıc kordinatlari x,y düzleminde), (bitiş cordinatları x,y düzleminde),(mavi,green,red),kalınlık )
cv2.line(img,(0,0),(511,511),(255,0,0),5 )
cv2.line(img,(400,50),(50,400),(0,200,0),10  ) # burda capraz cizdik line i


## kare cizelim yapalım
## cv2.rectangle(parametre,(başlangıc x,y cordinatları),(bitiş x,y cordinatları),(color),thickness)
cv2.rectangle(img,(50,50),(300,300),(0,0,255),5 ) # 5 kalınlık
cv2.rectangle(img,(300,300),(511,511),(0,255,0),-1) # -1 yaparsan içini doldurursun karenin


## cv2.circle(parametren img gibi,(dairenin merkezi x,y düzleminde),(yarıcap),(renkler),kalınlık)
cv2.circle(img,(255,255),45,(120,120,120),2  )
cv2.circle(img,(100,100),90,(255,50,500),-1)


## elipse cizelim
##cv2.ellipse(img,(merkezi x,y düzleminde),(uzunluk),(angle),(start angle),(end angle),(color),(thickness))
cv2.ellipse(img,(256,256),(100,50),0,0,100,(255,100,0),3)
cv2.ellipse(img,(100,100),(100,50),0,0,100,(0,100,150),-1)

## cokgen cizme
pts=numpy.array([[20,30],[100,120],[255,255],[10,400]],numpy.int32)
#print(pts)# 4x2 lik matrix verdi   20 30 \n 100 120 \n gibi
# print(pts.reshape(-1,1,2) )  # matrix i boyutubu degiştirdi , -1  yazmasının olayı row row almak için ,1 inci row u komple alır
## sonra 2inci row u komple alır öyle devam
## kapalı = True = başlangıc ve bitiş noktasını birleştirir
## acık = False =  sadece cizgileri yapardı,başlangıc ile bitiş i birleştirmezdi
## polylines((parametre ebru gibi),[x,y cordinatlar noktalar yani] kapalı or acık,(color),thickness  )
 cv2.polylines(img,[pts],False,(255,255,255),3 )


font=cv2.FONT_HERSHEY_PLAIN ## yazı büyüklügü felan complex felan cıkıyor _plain sil tekrar _ koy cıkıyor secenekler
## cv2.putText(parametre,"ne yazarsan artık",(yazım yeri x,y cordinatları),font,boyut,(color),thickness,line tipi)
cv2.putText(img,"ebru ceylan",(10,400),font,4,(0,155,255),2,cv2.LINE_AA )



cv2.imshow("resim",img)
cv2.waitKey(0)
cv2.destroyAllWindows()











#OpenCV ile Görüntü İşleme | -5 (Fare Olayları)

import cv2
import numpy as np

def ebru(event,x,y,flags,param):
 #print(x, y) # mouse cordinatları gösteriyor anlık olarak
 if event==cv2.EVENT_LBUTTONDBLCLK : ## her double click de circle koyuyor siyah pencereye
  ## Tek click için ise LBUTTONDOWN veya LBUTTONUP dersin down butona bastıgında ,up ise elini kaldırdıgında
  cv2.circle(img,(x,y),50,(255,0,0),-1)


#img=np.ones((500,500,3)) # böyle yapınca arka plan beyaz oluyor
img=np.ones((500,500,3),np.uint8)
cv2.namedWindow("point")
cv2.setMouseCallback("point",ebru)

while(True):
 cv2.imshow("point",img)
 if cv2.waitKey(1) & 0xFF ==ord("q"):
  break
cv2.destroyAllWindows()








#OpenCV ile Görüntü İşleme | -5 (Fare Olayları)
# burda m ye basında circle ciziyor bildigin paint yaptık
# normalde kare yani rectangle ciziyor
import cv2
import numpy as np

cizim=False
mod=False
xi,yi=-1,-1

def ebru(event,x,y,flags,param):
 global xi,yi,cizim,mod
 if event==cv2.EVENT_LBUTTONDOWN: # buttona bastıgında
  xi,yi=x,y
  cizim=True
 elif event==cv2.EVENT_MOUSEMOVE: # buton hareketinde 
  if cizim==True:
   if mod:
    cv2.circle(img,(x,y),2,(100,50,0),-1) # xi,yi yapsaydık elimizi butona basılıyken sürekli cizmezdi sürekli bas cek yapmak gerekirdi
   else:
    cv2.rectangle(img,(xi,yi),(x,y),(0,0,255),-1)
  else:
   pass
 elif event==cv2.EVENT_LBUTTONUP: # butondan elini cektigindeki komut
  cizim=Falseq
  """if mod:  # bunu yorumdan cıkartıncada aynı şekilde calışıyor sanırım fantazi niyetine koydu bunu 
   cv2.circle(img, (x, y), 2, (100, 50, 0), -1) # xi,yi yapsaydık elimizi butona basılıyken sürekli cizmezdi sürekli bas cek yapmak gerekirdi
  else:
   cv2.rectangle(img, (xi, yi), (x, y), (0, 0, 255), -1)"""


#img=np.ones((500,500,3)) # böyle yapınca arka plan beyaz oluyor
img=np.ones((500,500,3),np.uint8)
cv2.namedWindow("point")
cv2.setMouseCallback("point",ebru)

while(True):
 cv2.imshow("point",img)
 if cv2.waitKey(1) & 0xFF ==ord("q"):
  break
 elif cv2.waitKey(1) & 0xFF ==ord("m"): #mod circle to rec ,rec to circle geçiş yapıyoruz
  mod=not mod
cv2.destroyAllWindows()




















import cv2 as cv
import numpy as np

def ebru(x):
    pass

img=np.zeros((300,500,3),np.uint8) # bu unit8 i positif sayılar olsun diye koydu

cv.namedWindow("resim")
## RGB = red green blue
## cv.createTrackbar("track bardaki ismi","pencere ismi",başlangıc degeri track bardaki,bitiş degeri track daki, function ismi)
## bu function i kullanmadık evet ama yazmaz isen hata verir ,createtackbar yaratmak için ,gettrackbar ise  degerleri almak için
## aslında bu functiondanda alınabilir miş de bu cocuk bu şekilde tercih etti
cv.createTrackbar("ebru R","resim",0,255,ebru )
cv.createTrackbar("ceylan G","resim",0,255,ebru )
cv.createTrackbar("B","resim",0,255,ebru )

cv.createTrackbar("ON/OFF","resim",0,1,ebru )

while 1:
    cv.imshow("resim",img)

    if cv.waitKey(1) & 0xff ==27:
        break
    r = cv.getTrackbarPos("ebru R","resim")
    g = cv.getTrackbarPos("ceylan G", "resim")
    b = cv.getTrackbarPos("B", "resim")

    switch=cv.getTrackbarPos("ON/OFF","resim")

    if switch:
        img[:]=[b,g,r]
        print(img) # matrix olarak gösteriyor renkleri R G B
    else:
        img[:]=0

cv.destroyAllWindows()





















import cv2
import matplotlib.pyplot as plt
"""
resim=cv2.imread("para.jpg")
print(resim[100,100])  # satır sütün olarak düşün
## [249 230 233] verir  bunlar color yani rgb ,red green,blue  ,0 ile 255 arası renkler var, 0 siyah 255 beyaz,
print(resim[100,100,0]) # 249 verir  0 ,1,2  toplamda 3 index var 3 düzlemde
resim[100,100,0]=255
print(resim[100,100]) # [255,230,233]

print(resim.item(100,100,0)) # 3 variable gir yoksa hata alırsın ,0 ,1,2 birini yaz
resim.itemset((100,100,0),100)
print(resim[100,100]) # [100 230 233]

print(resim.shape) # (328, 328, 3)
print(resim.size) # 322752 verir 328*328*3 den geldi
print(resim.dtype) # uint8
"""


## ROI işlemleri var bunlar göz tespiti felan yapıyor kol bacak yüz ,deneme yapalım
## kesme islemi kırpma baska yere yerleştirme etc.

resim=cv2.imread("para.jpg") # resim=cv2.imread("para.jpg",0) gri yaptık resmi
kırp=resim[30:90 ,170:280] # [height,width]

resim[140:200,30:140]=kırp


## deneme yaptım öyle  açmak için
##cv2.imshow("a",resim)
##cv2.waitKey()


plt.subplot(121)
plt.imshow(resim) # plt.imshow(resim,"gray")
plt.subplot(122)
plt.imshow(kırp) # plt.imshow(kırp,"gray")  gri yaptık

plt.show() # orginal fotodaki renk ile bu gösterilen renk farklıdır  ,opencv de rgb ama matplot da bgr okur
## kısava mavi ile kırmızı renkler yer degiştirir


## renk uzaylarını almak 1 inci yol mesela tüm kırmızıları resimden sil istersin belki
#b,g,r=cv2.split(resim)
#resim2=cv2.merge((b,g,r))
## renk uzayı almak 2 inci yol
b=resim[:,:,0]
resim[:,:,2]=0
cv2.imshow("resim",resim)
cv2.waitKey(0)
cv2.destroyAllWindows()












## cerceve ekleme
import cv2
import numpy as np
from matplotlib import pyplot as plt

blue=[255,0,0]
img1=cv2.imread("para.jpg")
# copyMakeBorder(source,top,bottom,left,right,bordertype)  left right bottom top burda borderda yani edgelerdeki thicknes 10 luk yani
replicate=cv2.copyMakeBorder(img1,10,10,10,10,cv2.BORDER_REPLICATE)
reflect=cv2.copyMakeBorder(img1,10,10,10,10,cv2.BORDER_REFLECT)
reflect101=cv2.copyMakeBorder(img1,10,10,10,10,cv2.BORDER_REFLECT_101)
wrap=cv2.copyMakeBorder(img1,10,10,10,10,cv2.BORDER_WRAP)
constant=cv2.copyMakeBorder(img1,10,10,10,10,cv2.BORDER_CONSTANT,value=blue)

plt.subplot(231),plt.imshow(img1,"gray"),plt.title("ORIGINAL")
plt.subplot(232),plt.imshow(replicate,"gray"),plt.title("REPLİCATE")
plt.subplot(233),plt.imshow(reflect,"gray"),plt.title("REFLECT")
plt.subplot(234),plt.imshow(reflect101,"gray"),plt.title("REFLECT_101")
plt.subplot(235),plt.imshow(wrap,"gray"),plt.title("WRAP")
plt.subplot(236),plt.imshow(constant,"gray"),plt.title("CONSTANT")
plt.show()
"""
Soru: Çerçeve eklerken blue = [255,0,0] yazdım ama çerçeve oluştuğunda kırmızı renkte gözüküyordu.
Sebebi nedir ?
Cevap: Çünkü OpenCV BGR formatını kullanırken Matplotlib RGB formatını kullanıyor 
ve biz mavi olarak belirttik ama plt.imshow ile gösterirken maviler kırmızı, 
kırmızılar mavi olarak gösterildi.
"""









# burda width,height,fps almayı gördük ,3=width,4=height,5=fps kamera fps 30
import cv2

cv2.namedWindow("re",cv2.WINDOW_NORMAL)
cam=cv2.VideoCapture(0)
cam.set(cv2.CAP_PROP_FPS, int(60))
print(cam.get(3))
print(cam.get(4))
print(cam.get(5))
while True:
    ret,frame = cam.read()
    cv2.imshow("re", frame)
    key = cv2.waitKey(1) & 0xFF
    if key == ord("q"):
        break
    print(cam.get(3))
    print(cam.get(4))
    print(cam.get(5))

cv2.destroyAllWindows()